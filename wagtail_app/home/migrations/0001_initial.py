# Generated by Django 5.0.1 on 2025-05-19 10:28

import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0091_remove_revision_submitted_for_moderation"),
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="AboutPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro_title", models.CharField(blank=True, max_length=255)),
                ("intro_text", wagtail.fields.RichTextField(blank=True)),
                ("vision_title", models.CharField(blank=True, max_length=255)),
                ("vision_text", wagtail.fields.RichTextField(blank=True)),
                ("mission_title", models.CharField(blank=True, max_length=255)),
                ("mission_text", wagtail.fields.RichTextField(blank=True)),
                ("history_title", models.CharField(blank=True, max_length=255)),
                ("history_text", wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ContactPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro_title", models.CharField(blank=True, max_length=255)),
                ("intro_text", wagtail.fields.RichTextField(blank=True)),
                ("address", models.TextField(blank=True)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                (
                    "map_location",
                    models.CharField(
                        blank=True, help_text="Coordinates for the map", max_length=255
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ServicesPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro_title", models.CharField(blank=True, max_length=255)),
                ("intro_text", wagtail.fields.RichTextField(blank=True)),
                (
                    "services",
                    wagtail.fields.StreamField(
                        [
                            (
                                "service",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=True),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.TextBlock(required=True),
                                        ),
                                        (
                                            "icon",
                                            wagtail.blocks.CharBlock(
                                                help_text="Font Awesome icon class",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="HomePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("hero_title", models.CharField(blank=True, max_length=255)),
                ("hero_subtitle", models.TextField(blank=True)),
                ("hero_cta_text", models.CharField(blank=True, max_length=100)),
                ("hero_cta_link", models.CharField(blank=True, max_length=255)),
                ("intro_title", models.CharField(blank=True, max_length=255)),
                ("intro_text", wagtail.fields.RichTextField(blank=True)),
                ("features_title", models.CharField(blank=True, max_length=255)),
                (
                    "features",
                    wagtail.fields.StreamField(
                        [
                            (
                                "feature",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=True),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.TextBlock(required=True),
                                        ),
                                        (
                                            "icon",
                                            wagtail.blocks.CharBlock(
                                                help_text="Font Awesome icon class",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                    ),
                ),
                ("services_title", models.CharField(blank=True, max_length=255)),
                (
                    "services",
                    wagtail.fields.StreamField(
                        [
                            (
                                "service",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=True),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.TextBlock(required=True),
                                        ),
                                        (
                                            "icon",
                                            wagtail.blocks.CharBlock(
                                                help_text="Font Awesome icon class",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                    ),
                ),
                (
                    "cta",
                    wagtail.fields.StreamField(
                        [
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(required=True),
                                        ),
                                        (
                                            "subheading",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "button_text",
                                            wagtail.blocks.CharBlock(required=True),
                                        ),
                                        (
                                            "button_link",
                                            wagtail.blocks.CharBlock(required=True),
                                        ),
                                        (
                                            "background_color",
                                            wagtail.blocks.CharBlock(
                                                default="#0077aa",
                                                help_text="Hex color code",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                    ),
                ),
                (
                    "hero_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="TeamMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("position", models.CharField(max_length=255)),
                ("bio", wagtail.fields.RichTextField(blank=True)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("linkedin", models.URLField(blank=True)),
                ("twitter", models.URLField(blank=True)),
                (
                    "photo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Member",
                "verbose_name_plural": "Team Members",
            },
        ),
    ]
